variables:
  PUSH_IMAGE: "registry.cn-shenzhen.aliyuncs.com/dsdiot/hbweb"
  IMAGE_NAME: "dsdiot/dsdweb"
  BUILD_IMAGE: "node:8.9.4-alpine"
  BUILD_SRC_DIR: "/home/node/src"

before_script:
  - echo $CI_JOB_NAME
  - echo $CI_PROJECT_DIR
  - echo $CI_UPDATE_SERVICE
  - echo $CD_TENV_SERVICE_NAME
  - echo $CD_TENV_COMPOSE_DIR
  - echo $CD_UPDATE_IMAGE
  - echo $CD_TENV_MACHINE_NAME
  # More Predefined variables (Environment variables) see https://docs.gitlab.com/ce/ci/variables/README.html

stages:
  - compile
  - package
  - cleanup
  # - test
  - deploy

compile:build-dist:
  stage: compile
  only:
    - dev
    - /^(rel|fix)-.*$/
  script:
    - docker run --rm -t -u node -v ${CI_PROJECT_DIR}:${BUILD_SRC_DIR} -w ${BUILD_SRC_DIR} ${BUILD_IMAGE} npm install --quiet
    - docker run --rm -t -u node -v ${CI_PROJECT_DIR}:${BUILD_SRC_DIR} -w ${BUILD_SRC_DIR} ${BUILD_IMAGE} npm run build
  cache:
    key: dist-deps
    paths:
      - node_modules/
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - dist/
    expire_in: 2 days
  tags:
    - default
    - compile

compile:build-dist-rel:
  stage: compile
  only:
    - master
    - tags
  script:
    - docker run --rm -t -u node -v ${CI_PROJECT_DIR}:${BUILD_SRC_DIR} -w ${BUILD_SRC_DIR} ${BUILD_IMAGE} npm install --quiet
    - docker run --rm -t -u node -v ${CI_PROJECT_DIR}:${BUILD_SRC_DIR} -w ${BUILD_SRC_DIR} ${BUILD_IMAGE} npm run build
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - dist/
    expire_in: 1 week
  tags:
    - default
    - compile

package:docker-build:
  stage: package
  only:
    - dev
    - /^(rel|fix)-.*$/
  script:
    - docker image build -t ${PUSH_IMAGE}:${CI_COMMIT_REF_NAME} .
    - docker image push ${PUSH_IMAGE}:${CI_COMMIT_REF_NAME}
    - docker image rmi ${PUSH_IMAGE}:${CI_COMMIT_REF_NAME}
  dependencies:
    - compile:build-dist
  tags:
    - default
    - package
    - docker

package:docker-build-tag:
  stage: package
  only:
    - master
    - tags
  script:
    - docker image build --force-rm --no-cache -t ${PUSH_IMAGE}:${CI_COMMIT_REF_NAME} .
    - docker image push ${PUSH_IMAGE}:${CI_COMMIT_REF_NAME}
    - docker image rmi ${PUSH_IMAGE}:${CI_COMMIT_REF_NAME}
  dependencies:
    - compile:build-dist-rel
  tags:
    - default
    - package
    - docker

deploy:docker-tenv-update:
 stage: deploy
 only:
    - dev
 script:
    - ./deploy/updateComposeService.sh ${CD_TENV_COMPOSE_DIR} ${CI_COMMIT_REF_NAME} ${CD_UPDATE_IMAGE} ${CD_TENV_SERVICE_NAME}
 tags:
    - dcompose
    - deployment
    - tenv
    - dsdiotapp
    

deploy:docker-prod-update:
 stage: deploy
 only:
    - master
 script:
    - ./deploy/updateComposeService.sh ${CD_PROD_COMPOSE_DIR} ${CI_COMMIT_REF_NAME} ${CD_UPDATE_IMAGE} ${CD_PROD_SERVICE_NAME}
 tags:
  - dcompose
  - deployment
  - prod
  - dsdiotapp
#
#
# deploy:docker-service:
#   stage: deploy
#   only:
#     - tags
#   script:
#     - ./deploy/updateService.sh ${CI_COMMIT_TAG} ${IMAGE_NAME} ${CI_UPDATE_SERVICE}
#   tags:
#     - deploy
#     - swarm
#     - hk
